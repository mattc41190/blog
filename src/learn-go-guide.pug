doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(http-equiv='X-UA-Compatible', content='ie=edge')
    title Matts Blog
    link(href='https://fonts.googleapis.com/css?family=Heebo', rel='stylesheet')
    style.
      html,
      body {
      font-family: 'Heebo', 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
      background-color: #f4f4f4;
      color: #373737;
      margin: 0%;
      }
      main {
      max-width: 1100px;
      min-width: 200px;
      margin: 0 auto;
      padding: 10px;
      }
      header {
      padding: 50px;
      background-color: #dcd0c0;
      text-align: center;
      }
      header h1 {
      margin: 0%;
      font-size: 200%;
      }
      header h1::-moz-selection {
      background: #373737;
      color: #f4f4f4;
      }
      header h1::selection {
      background: #373737;
      color: #f4f4f4;
      }
      header h2::-moz-selection {
      background: #373737;
      color: #f4f4f4;
      }
      header h2::selection {
      background: #373737;
      color: #f4f4f4;
      }
      article p {
      padding-left: 25px;
      }
      article ::-moz-selection {
      background: #373737;
      color: #f4f4f4;
      }
      article ::selection {
      background: #373737;
      color: #f4f4f4;
      }
      h3 a {
      color: inherit;
      text-decoration: none;
      }
      small::-moz-selection {
      background: #373737;
      color: #f4f4f4;
      }
      small::selection {
      background: #373737;
      color: #f4f4f4;
      }
  body
    section#page
      header
        h1#title GoLang Guide
        h2#sub-title A (seemingly) sensical approach to learning go 
      main
        article
          h3
            a(href='#step-one') One: Find some resources
          p In order to learn a thing you need the book. Here are some "books". Your "books" don't need to be these "books", but they are pretty good "books". 
          ul
            li
              a(href="https://golang.org/doc/") Official Docs
            li
              a(href="https://www.udemy.com/go-the-complete-developers-guide/") Golang Udemy Course
            li
              a(href="https://gobyexample.com/") Go By Example
            li
              a(href="https://go-proverbs.github.io/") Go Proverbs
            li
              a(href="https://github.com/ardanlabs/gotraining/blob/master/topics/courses/go/README.md") Ardan Labs
          p It goes without saying, but I am still saying it, that in order for the "books" to work you have to read, watch, or listen to them. The only thing preventing the knowledge in these books from residing in your brain is the mental effort required to pay attention to them.
          h3
            a(href='#step-two') Two: Make some stuff
          p Once you know your way around the language basics you should attempt to make some simple CLI based clones without a guide or example code holding your hand the whole time.
          p Ideas:
          ul
            li Read from input file, uppercase contents and replace.
            li To Do Application
          h3
            a(href='#step-three') Three: Make a server
          p Create a vanilla server in Go that can manage a simple asset or collection of assets.
          ul
            li go - http
          h3
            a(href='#step-four') Four: Give back
          p Search the github universe for a project in Go that interests you. Make a collection of example projects leveraging the library of framework. Once you have the end developers point of view understood take a look at the docs, or issues, and try to improve the project.
          p Ideas:
          ul
            li go-iris
            li go-kit
            
          
            
